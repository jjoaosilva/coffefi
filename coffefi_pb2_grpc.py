# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import coffefi_pb2 as coffefi__pb2


class CoffeFiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TemperatureSensor = channel.unary_unary(
        '/coffefi.CoffeFi/TemperatureSensor',
        request_serializer=coffefi__pb2.Empty.SerializeToString,
        response_deserializer=coffefi__pb2.Temperature.FromString,
        )
    self.Lamp = channel.unary_unary(
        '/coffefi.CoffeFi/Lamp',
        request_serializer=coffefi__pb2.Switch.SerializeToString,
        response_deserializer=coffefi__pb2.Power.FromString,
        )
    self.CoffeMachine = channel.unary_unary(
        '/coffefi.CoffeFi/CoffeMachine',
        request_serializer=coffefi__pb2.Empty.SerializeToString,
        response_deserializer=coffefi__pb2.Status.FromString,
        )


class CoffeFiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def TemperatureSensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Lamp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CoffeMachine(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CoffeFiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TemperatureSensor': grpc.unary_unary_rpc_method_handler(
          servicer.TemperatureSensor,
          request_deserializer=coffefi__pb2.Empty.FromString,
          response_serializer=coffefi__pb2.Temperature.SerializeToString,
      ),
      'Lamp': grpc.unary_unary_rpc_method_handler(
          servicer.Lamp,
          request_deserializer=coffefi__pb2.Switch.FromString,
          response_serializer=coffefi__pb2.Power.SerializeToString,
      ),
      'CoffeMachine': grpc.unary_unary_rpc_method_handler(
          servicer.CoffeMachine,
          request_deserializer=coffefi__pb2.Empty.FromString,
          response_serializer=coffefi__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'coffefi.CoffeFi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
